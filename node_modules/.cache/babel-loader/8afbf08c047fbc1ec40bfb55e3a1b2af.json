{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Documentos/DEV/studies/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './style.scss';\nimport \"antd/dist/antd.css\";\nimport React, { useState } from \"react\";\nimport { Col, Button, Row, Input, Radio } from 'antd';\nimport { UploadOutlined, PlusOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const defaultUploadFile = {\n    lastModified: 0,\n    lastModifiedDate: new Date(),\n    name: \"\",\n    size: 0,\n    type: \"\",\n    uid: \"\",\n    webkitRelativePath: \"\",\n    duenumber: 0\n  };\n  const [value, setvalue] = useState(1);\n  const [uploadNewFile, setUploadNewFile] = useState([defaultUploadFile]);\n\n  const renderFiles = () => {\n    uploadNewFile.map((content, indexFile) => {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: \"Qualquer coisa ai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  const removeInputFile = e => {\n    e.preventDefault();\n    setUploadNewFile([uploadNewFile]);\n  };\n\n  const onChange = e => {\n    console.log('radio checked', e.target.value);\n    setvalue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderFiles()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YBHOtyWA9+21X6uCEjzJtGVlsLE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bruno/Documentos/DEV/studies/src/App.js"],"names":["React","useState","Col","Button","Row","Input","Radio","UploadOutlined","PlusOutlined","DeleteOutlined","App","defaultUploadFile","lastModified","lastModifiedDate","Date","name","size","type","uid","webkitRelativePath","duenumber","value","setvalue","uploadNewFile","setUploadNewFile","renderFiles","map","content","indexFile","removeInputFile","e","preventDefault","onChange","console","log","target"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAO,oBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,KAAlC,QAA+C,MAA/C;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,cAAvC,QAA6D,mBAA7D;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,iBAAiB,GAAG;AACxBC,IAAAA,YAAY,EAAE,CADU;AAExBC,IAAAA,gBAAgB,EAAE,IAAIC,IAAJ,EAFM;AAGxBC,IAAAA,IAAI,EAAE,EAHkB;AAIxBC,IAAAA,IAAI,EAAE,CAJkB;AAKxBC,IAAAA,IAAI,EAAE,EALkB;AAMxBC,IAAAA,GAAG,EAAE,EANmB;AAOxBC,IAAAA,kBAAkB,EAAE,EAPI;AAQxBC,IAAAA,SAAS,EAAE;AARa,GAA1B;AAWA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,CAACU,iBAAD,CAAD,CAAlD;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACxBF,IAAAA,aAAa,CAACG,GAAd,CAAkB,CAACC,OAAD,EAAUC,SAAV,KAAwB;AACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,gBAAgB,CAAC,CAACD,aAAD,CAAD,CAAhB;AACD,GAHD;;AAKA,QAAMS,QAAQ,GAAIF,CAAD,IAAO;AACtBG,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,CAAC,CAACK,MAAF,CAASd,KAAtC;AACAC,IAAAA,QAAQ,CAACQ,CAAC,CAACK,MAAF,CAASd,KAAV,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,cACGI,WAAW;AADd;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArCQf,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import './style.scss';\nimport \"antd/dist/antd.css\";\nimport React, { useState } from \"react\";\nimport { Col, Button, Row, Input, Radio } from 'antd';\nimport { UploadOutlined, PlusOutlined, DeleteOutlined } from '@ant-design/icons';\n\nfunction App() {\n\n  const defaultUploadFile = {\n    lastModified: 0,\n    lastModifiedDate: new Date(),\n    name: \"\",\n    size: 0,\n    type: \"\",\n    uid: \"\",\n    webkitRelativePath: \"\",\n    duenumber: 0,\n  }\n\n  const [value, setvalue] = useState(1);\n  const [uploadNewFile, setUploadNewFile] = useState([defaultUploadFile]);\n\n  const renderFiles = () => {\n    uploadNewFile.map((content, indexFile) => {\n      <p>Qualquer coisa ai</p>\n    });\n  }\n  \n  const removeInputFile = (e) => {\n    e.preventDefault();\n    setUploadNewFile([uploadNewFile]);\n  }\n\n  const onChange = (e) => {\n    console.log('radio checked', e.target.value);\n    setvalue(e.target.value);\n  }\n\n  return (\n    <div>\n      {renderFiles()}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}